<templateSet group="Go">
  <template name="b.err" value="logs.Error(&quot;[$PACKAGE$:$LOCATION$][$FUNCTION$] $ERROR$. Details: &quot;, $TRACER$)" description="beego error logs" toReformat="true" toShortenFQNames="true">
    <variable name="PACKAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LOCATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="ERROR" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TRACER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="b.info" value="logs.Error(&quot;[$PACKAGE$:$LOCATION$][$FUNCTION$] $INFO$. Details: &quot;, $TRACER$)" description="beego info logs" toReformat="true" toShortenFQNames="true">
    <variable name="PACKAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LOCATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="INFO" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="TRACER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="b.reqerr" value="$CONTROLLER$.Data[&quot;json&quot;] = &amp;ResMessage{StatusCode: $CODE$, Message: $MESSAGE$}" description="custom invalid request" toReformat="true" toShortenFQNames="true">
    <variable name="CONTROLLER" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CODE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="MESSAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="b.reqsuc" value="$CONTROLLER$.Data[&quot;json&quot;] = &amp;ResMessage{StatusCode: StatusCodeOK, Data: $DATA$}" description="custom request success" toReformat="true" toShortenFQNames="true">
    <variable name="CONTROLLER" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="DATA" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="b.reqdec" value="var reqObj $REQUEST_STRUCT$&#10;loadRequestErr := json.Unmarshal($CONTROLLER$.Ctx.Input.RequestBody, &amp;reqObj)&#10;if loadRequestErr != nil {&#10;&#9;logs.Error(&quot;[$PACKAGE$:$LOCATION$][$FUNCTION$] Cannot decode package. Details: &quot;, loadRequestErr.Error())&#10;&#9;$CONTROLLER$.Data[&quot;json&quot;] = &amp;ResMessage{StatusCode: StatusCodeInvalidRequest, Message: StatusMessageInvalidRequest}&#10;}&#10;" description="Decode request object" toReformat="true" toShortenFQNames="true">
    <variable name="REQUEST_STRUCT" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PACKAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LOCATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONTROLLER" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="b.i64params" value="$OBJ$, getParamErr := $CONTROLLER$.GetInt64(&quot;:$PARAM$&quot;)&#10;&#9;if getParamErr != nil {&#10;&#9;&#9;logs.Error(&quot;[$PACKAGE$:$LOCATION$][$FUNCTION$] Cannot params $PARAM$. Details: &quot;, getParamErr.Error())&#10;&#9;&#9;jc.Data[&quot;json&quot;] = &amp;ResMessage{StatusCode: StatusCodeInvalidRequest, Message: StatusMessageInvalidRequest}&#10;&#9;&#9;return&#10;&#9;}" description="Get int64 params" toReformat="true" toShortenFQNames="true">
    <variable name="OBJ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="CONTROLLER" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PACKAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LOCATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="b.iparams" value="$OBJ$, getParamErr := strconv.Atoi(jc.Ctx.Input.Param(&quot;:$PARAMS$&quot;))&#10;&#9;if getParamErr != nil {&#10;&#9;&#9;logs.Error(&quot;[$PACKAGE$:$LOCATION$][$FUNCTION$] Cannot params $PARAM$. Details: &quot;, getParamErr.Error())&#10;&#9;&#9;jc.Data[&quot;json&quot;] = &amp;ResMessage{StatusCode: StatusCodeInvalidRequest, Message: StatusMessageInvalidRequest}&#10;&#9;&#9;return&#10;&#9;}" description="Get int params" toReformat="true" toShortenFQNames="true">
    <variable name="OBJ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAMS" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PACKAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LOCATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
  <template name="b.aparams" value="$OBJ$, getParamErr := strconv.ParseInt(jc.GetString(&quot;:$PARAM$&quot;), 10, 64)&#10;&#9;if getParamErr != nil {&#10;&#9;&#9;logs.Error(&quot;[$PACKAGE$:$LOCATION$][$FUNCTION$] Cannot params $PARAM$. Details: &quot;, getParamErr.Error())&#10;&#9;&#9;jc.Data[&quot;json&quot;] = &amp;ResMessage{StatusCode: StatusCodeInvalidRequest, Message: StatusMessageInvalidRequest}&#10;&#9;&#9;return&#10;&#9;}" description="Get int64 params" toReformat="true" toShortenFQNames="true">
    <variable name="OBJ" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PARAM" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="PACKAGE" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="LOCATION" expression="" defaultValue="" alwaysStopAt="true" />
    <variable name="FUNCTION" expression="" defaultValue="" alwaysStopAt="true" />
    <context>
      <option name="GO" value="true" />
    </context>
  </template>
</templateSet>